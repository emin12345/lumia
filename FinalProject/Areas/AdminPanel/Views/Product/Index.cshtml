@model IEnumerable<Product>
<style>
    tbody{
        position: relative;
        top: 3rem;
        right: 8rem;
    }
    #pagination{
        

    
        position: relative;
        top: 43rem;
        right: 61rem;
    }

 
    #create {
        position: relative;
        width: 100px;
        top: 5rem;
        left: 1rem;
        display: block;
        text-decoration: none;
        transition: 0.3s;
        margin-bottom: 5rem;
    }

    #create {
        transition: 0.3s;
        text-decoration: none;
    }

</style>
<p>
    <a id="create" asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MiniDesc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BasketPhoto)
            </th>
           
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                 <td>
                    <img style="width:150px;height:150px;object-fit:contain" src="/images/products/@item.ProductImages.FirstOrDefault(x=>x.IsMain==true).Path">
                </td>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MiniDesc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BasketPhoto)
            </td>
           
            <td>
                    <button class="btn btn-warning">
                        <a style="text-decoration:none;color:white" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    </button>
                    <button class="btn btn-danger">
                        <a style="text-decoration:none;color:white" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </button>
                    <button class="btn btn-secondary">
                        <a style="text-decoration:none;color:black" asp-controller="Product" asp-action="Comments" asp-route-ProductId="@item.Id">
                            Comments(@(item.Comments != null ? item.Comments.Count : 0))
                        </a>

                    </button>
            </td>
        </tr>
}
    </tbody>
</table>
<nav id="pagination" class="mt-3 d-flex justify-content-center" aria-label="...">
    <ul class="pagination">
        <li class="page-item  @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage-1)" tabindex="-1">Previous</a>
        </li>
        @for (int i = 1; i <= ViewBag.TotalPage; i++)
        {
            <li class="page-item @(i==ViewBag.CurrentPage ? "active pointerNone" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
            </li>
        }

        <li class="page-item @(ViewBag.TotalPage == ViewBag.CurrentPage ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage+1)">Next</a>
        </li>
    </ul>
</nav>